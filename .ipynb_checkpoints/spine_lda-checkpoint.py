# -*- coding: utf-8 -*-
"""spine lda (1).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PS0eQq-qcxs5FFutIe298qw96jIdNhW6
"""

# Third Step
# Author: David Burns
# License: BSD
import os
import re
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis

import seglearn as sgl

def plot_embedding(emb, y, y_labels):
    # plot a 2D feature map embedding
    x_min, x_max = np.min(emb, 0), np.max(emb, 0)
    emb = (emb - x_min) / (x_max - x_min)

    NC = len(y_labels)
    markers = ['.', '+', 'x', '|', '_', '*', 'o','v','^','<']

    fig = plt.figure()
    fig.set_size_inches(6, 6)

    for c in range(NC):
        i = y == c
        plt.scatter(emb[i, 0], emb[i, 1], marker=markers[c], label=y_labels[c])

    plt.xticks([]), plt.yticks([])
    plt.legend()
    plt.tight_layout()

# load the data
X = []
cases = []
#cases = ['4','14','22','23','25','55','61','66','69','71']
directory_in_str = '0Months/'
directory = os.fsencode(directory_in_str)
for file in os.listdir(directory):
    #fname = '0Months/Case' + c + '.txt'
    filename = os.fsdecode(file)
    if filename.endswith(".txt"):
        npa = np.genfromtxt(directory_in_str+filename, delimiter=',', dtype=np.float64, usecols=range(1,9))
        print("loaded case " + filename + " with shape ", npa.shape, ", dtype: ", npa.dtype)
        X.append(npa)
        cases = cases + re.findall('\d+', filename)
        continue
    else:
        print("Ignored A file")
        continue
y = np.arange(len(X))

# # create a pipeline for LDA transformation of the feature representation
clf = sgl.Pype([('segment', sgl.SegmentX(width=4096)),
                ('ftr', sgl.FeatureRep()),
                ('lda', LinearDiscriminantAnalysis(n_components=2))])

X2, y2 = clf.fit_transform(X, y)
plot_embedding(X2, y2.astype(int), cases) #
plt.show()

